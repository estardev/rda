<?php

namespace Proxies\__CG__\estar\rda\RdaBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Campo extends \estar\rda\RdaBundle\Entity\Campo implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'estar\\rda\\RdaBundle\\Entity\\Campo' . "\0" . 'nome', '' . "\0" . 'estar\\rda\\RdaBundle\\Entity\\Campo' . "\0" . 'descrizione', '' . "\0" . 'estar\\rda\\RdaBundle\\Entity\\Campo' . "\0" . 'tipo', '' . "\0" . 'estar\\rda\\RdaBundle\\Entity\\Campo' . "\0" . 'obbligatorioinserzione', '' . "\0" . 'estar\\rda\\RdaBundle\\Entity\\Campo' . "\0" . 'obbligatoriovalidazione', '' . "\0" . 'estar\\rda\\RdaBundle\\Entity\\Campo' . "\0" . 'ordinamento', '' . "\0" . 'estar\\rda\\RdaBundle\\Entity\\Campo' . "\0" . 'fieldset', '' . "\0" . 'estar\\rda\\RdaBundle\\Entity\\Campo' . "\0" . 'ordinamentofieldset', '' . "\0" . 'estar\\rda\\RdaBundle\\Entity\\Campo' . "\0" . 'id', '' . "\0" . 'estar\\rda\\RdaBundle\\Entity\\Campo' . "\0" . 'idcategoria');
        }

        return array('__isInitialized__', '' . "\0" . 'estar\\rda\\RdaBundle\\Entity\\Campo' . "\0" . 'nome', '' . "\0" . 'estar\\rda\\RdaBundle\\Entity\\Campo' . "\0" . 'descrizione', '' . "\0" . 'estar\\rda\\RdaBundle\\Entity\\Campo' . "\0" . 'tipo', '' . "\0" . 'estar\\rda\\RdaBundle\\Entity\\Campo' . "\0" . 'obbligatorioinserzione', '' . "\0" . 'estar\\rda\\RdaBundle\\Entity\\Campo' . "\0" . 'obbligatoriovalidazione', '' . "\0" . 'estar\\rda\\RdaBundle\\Entity\\Campo' . "\0" . 'ordinamento', '' . "\0" . 'estar\\rda\\RdaBundle\\Entity\\Campo' . "\0" . 'fieldset', '' . "\0" . 'estar\\rda\\RdaBundle\\Entity\\Campo' . "\0" . 'ordinamentofieldset', '' . "\0" . 'estar\\rda\\RdaBundle\\Entity\\Campo' . "\0" . 'id', '' . "\0" . 'estar\\rda\\RdaBundle\\Entity\\Campo' . "\0" . 'idcategoria');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Campo $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setNome($nome)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNome', array($nome));

        return parent::setNome($nome);
    }

    /**
     * {@inheritDoc}
     */
    public function getNome()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNome', array());

        return parent::getNome();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescrizione($descrizione)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescrizione', array($descrizione));

        return parent::setDescrizione($descrizione);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescrizione()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescrizione', array());

        return parent::getDescrizione();
    }

    /**
     * {@inheritDoc}
     */
    public function setTipo($tipo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTipo', array($tipo));

        return parent::setTipo($tipo);
    }

    /**
     * {@inheritDoc}
     */
    public function getTipo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTipo', array());

        return parent::getTipo();
    }

    /**
     * {@inheritDoc}
     */
    public function setObbligatorioinserzione($obbligatorioinserzione)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setObbligatorioinserzione', array($obbligatorioinserzione));

        return parent::setObbligatorioinserzione($obbligatorioinserzione);
    }

    /**
     * {@inheritDoc}
     */
    public function getObbligatorioinserzione()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getObbligatorioinserzione', array());

        return parent::getObbligatorioinserzione();
    }

    /**
     * {@inheritDoc}
     */
    public function setObbligatoriovalidazione($obbligatoriovalidazione)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setObbligatoriovalidazione', array($obbligatoriovalidazione));

        return parent::setObbligatoriovalidazione($obbligatoriovalidazione);
    }

    /**
     * {@inheritDoc}
     */
    public function getObbligatoriovalidazione()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getObbligatoriovalidazione', array());

        return parent::getObbligatoriovalidazione();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrdinamento($ordinamento)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrdinamento', array($ordinamento));

        return parent::setOrdinamento($ordinamento);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrdinamento()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrdinamento', array());

        return parent::getOrdinamento();
    }

    /**
     * {@inheritDoc}
     */
    public function setFieldset($fieldset)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFieldset', array($fieldset));

        return parent::setFieldset($fieldset);
    }

    /**
     * {@inheritDoc}
     */
    public function getFieldset()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFieldset', array());

        return parent::getFieldset();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrdinamentofieldset($ordinamentofieldset)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrdinamentofieldset', array($ordinamentofieldset));

        return parent::setOrdinamentofieldset($ordinamentofieldset);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrdinamentofieldset()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrdinamentofieldset', array());

        return parent::getOrdinamentofieldset();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdcategoria(\estar\rda\RdaBundle\Entity\Categoria $idcategoria = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdcategoria', array($idcategoria));

        return parent::setIdcategoria($idcategoria);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdcategoria()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdcategoria', array());

        return parent::getIdcategoria();
    }

}
