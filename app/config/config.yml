imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    serializer:
#    { enable_annotations: true }
        enabled : true
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    globals:
        pathToWeb: "%kernel.root_dir%/../web"
        applicativo: "%applicativo%"
        invioprotocollo: "%invioprotocollo%"
        urlRDAv2: "%urlRDAv2%"

# Assetic Configuration
assetic:
    #debug:          "%kernel.debug%"
    #use_controller: false
    #bundles:        [ ]
    #java: /usr/bin/java
    filters:
        less:
            node: "C:\\Program Files\\nodejs\\node.exe"
            node_paths: ["C:\\Users\\MrZANO\\AppData\\Roaming\\npm\\node_modules"]
            apply_to: "\.less$"
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"
braincrafted_bootstrap:
    output_dir:
    assets_dir: %kernel.root_dir%/../vendor/twbs/bootstrap
    jquery_path: %kernel.root_dir%/../vendor/jquery/jquery/jquery-1.11.1.js
    css_preprocessor: less # "less", "lessphp", "sass" or "none"
    fonts_dir: %kernel.root_dir%/../web/fonts
    auto_configure:
        assetic: true
        twig: true
        knp_menu: true
        knp_paginator: true
    customize:
        variables_file: ~
        bootstrap_output: %kernel.root_dir%/Resources/less/bootstrap.less
        bootstrap_template: BraincraftedBootstrapBundle:Bootstrap:bootstrap.less.twig

# Doctrine Configuration
doctrine:
    dbal:
        default_connection:   default
        connections:
            default:
                driver:   pdo_mysql
                host:     "%database_host%"
                port:     "%database_port%"
                dbname:   "%database_name%"
                user:     "%database_user%"
                password: "%database_password%"
                charset:  UTF8
            programmazione:
                driver:   pdo_mysql
                host:     "%database_host2%"
                port:     "%database_port2%"
                dbname:   "%database_name2%"
                user:     "%database_user2%"
                password: "%database_password2%"
                charset:  UTF8

        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        default_entity_manager: default
        entity_managers:
                default:
                    connection: default
                    mappings:
                        estarRdaBundle: ~
                    naming_strategy: doctrine.orm.naming_strategy.underscore
                    auto_mapping: true
                programmazione:
                    connection: programmazione
                    mappings:
                        estarRdaBundle: ~
                    naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_generate_proxy_classes: "%kernel.debug%"


# app/config/config.yml
doctrine_migrations:
    dir_name: "%kernel.root_dir%/DoctrineMigrations"
    namespace: Application\Migrations
    table_name: migration_versions
    name: Application Migrations

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    port:      "%mailer_port%"
    encryption: ssl
#    auth_mode:  login

fos_user:
    from_email:
        address: "yourapp@yourapp.com"
        sender_name: "Demo String"
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: estar\rda\RdaBundle\Entity\Utente
    registration:
            form:
                type: app_user_registration
    profile:
            form:
                type: app_user_profile

knp_snappy:
    pdf:
        enabled:    true
  #      binary:     "\"C:\\Program Files\\wkhtmltopdf\\bin\\wkhtmltopdf.exe\"" #locale
#        binary:     /usr/local/bin/wkhtmltopdf #produzione
#        binary:     /usr/local/bin/wkhtmltopdf.sh #test
        binary: "%pdfwriter%"
        options:
            no-outline: true
            page-size: LETTER
            # Recommended to set UTF-8 as default encoding :)
            encoding: UTF-8
            enable-javascript: true
            no-background: true
            disable-smart-shrinking: true


winzou_state_machine:
    my_bundle_article:
        class: estar\rda\RdaBundle\Entity\Richiesta # class of your domain object
        property_path: status                       # property of your object holding the actual state (default is "state")
        graph: rda                                  # name of the graph (default is "default")
        # list of all possible states:
        states:
            - bozza
            - eliminata
            - annullata
            - attesa_val_tec
            - attesa_val_amm
            - da_inviare_ESTAR
            - inviata_ESTAR
            - evasa_ESTAR
            - rigetto_ESTAR
            - chiusa_ESTAR
            - annullata_ESTAR
        # list of all possible transitions:
        transitions:
            presentata:
                from: [bozza]
                to: attesa_val_tec
            rifiutata_tec:
                from: [attesa_val_tec]
                to: bozza
            validazione_tec:
                from: [attesa_val_tec]
                to: attesa_val_amm
            rifiutata_amm:
                from: [attesa_val_amm]
                to: attesa_val_tec
            validazione_amm:
                from: [attesa_val_amm]
                to: da_inviare_ESTAR
            inviato_ESTAR:
                from: [da_inviare_ESTAR]
                to: inviata_ESTAR
            cancellazione:
                from: [bozza, attesa_val_tec, attesa_val_amm, da_inviare_ESTAR]
                to: eliminata
            annullamento:
                from: [inviata_ESTAR]
                to: annullata
            rifiutata_amm_ESTAR:
                from: [inviata_ESTAR]
                to: attesa_val_amm
            rifiutata_tec_ESTAR:
                from: [inviata_ESTAR]
                to: attesa_val_tec
            rigettata_ESTAR:
                from: [inviata_ESTAR]
                to: rigetto_ESTAR
            chiusura_ESTAR:
                from: [inviata_ESTAR]
                to: chiusa_ESTAR
            apertura_ESTAR:
                from: [chiusa_ESTAR]
                to: inviata_ESTAR
            annullamento_ESTAR:
                #from: [da_inviare_ESTAR]
                from: [inviata_ESTAR]
                to: inviata_ESTAR
        # list of all callbacks
        callbacks:
            # will be called before applying a transition
            before:
                update_reviewer:
                    on:   'create'                         # call the callback on a specific transition
                    do:   [@my.awesome.service, 'update']  # will call the method of this Symfony service
                    args: ['object']                       # arguments for the callback
            # will be called after applying a transition
            after:
                email_on_publish:
                    on:   'publish'
                    do:   [@my.awesome.service, 'sendEmail']
                    args: ['object', '"Email title"']

vich_uploader:
    db_driver: orm # or mongodb or propel or phpcr
    storage: file_system


    mappings:
        richiesta_documento:
            uri_prefix:         /rda/web/documenti #produzione #test
            #uri_prefix:         /documenti #produzione
            upload_destination: %kernel.root_dir%/../web/documenti
            namer:              namer.richiesta_documento
            directory_namer:    directory_namer.richiesta_documento
            inject_on_load:     true
            delete_on_update:   true
            delete_on_remove:   true


be_simple_soap:
    cache:
        type:     disk
        lifetime: 86400
        limit:    5
    services:
            ServerESTAR:
                namespace:     http://localhost/RDA/web/app_dev.php/ws/ServerESTAR/1.0/
                binding:       rpc-literal
                resource:      "@estarRdaBundle/Controller/ServerESTARController.php"
                resource_type: annotation
    clients:
            ServerESTAR:
                wsdl:           http://localhost/RDA/web/app_dev.php/ws/ServerESTAR?wsdl
            Tempo:
                wsdl: http://www.webservicex.com/globalweather.asmx?wsdl
            Sistematica:
                wsdl: https://democorepaumbria.grupposistematica.it/isharedoc/webservices/webserviceInstance.wsdl


#oneup_uploader:
#    mappings:
#        gallery:
#            frontend: dropzone # or any uploader you use in the frontend
#            root_folder: true
##            storage:
##                directory: "%kernel.root_dir%/../web/uploads/"

monolog:
    handlers:
        programmatoria:
            type:   stream
            path:   "%kernel.logs_dir%/programmatoria.log"
            level:  debug
            channels: [programmatoria]
        sistematicaclient:
            type:   stream
            path:   "%kernel.logs_dir%/sistematicaclient.log"
            level:  debug
            channels: [sistematicaclient]
        sistematicaserver:
            type:   stream
            path:   "%kernel.logs_dir%/sistematicaserver.log"
            level:  debug
            channels: [sistematicaserver]
        richiestamodel:
            type:   stream
            path:   "%kernel.logs_dir%/richiestamodel.log"
            level:  debug
            channels: [richiestamodel]
        accesso:
            type:   stream
            path:   "%kernel.logs_dir%/accessi.log"
            level:  debug
            channels: [accessi]
